ifneq ($(MAKECMDGOALS),clean)
include $(KCONFIG_AUTOCONFIG)
endif

PHONY+=all subdir clean

TARGET_CFLAGS := -g -ggdb
TARGET_CFLAGS += -fno-builtin -nostdlib  -nostdinc -Wformat -mno-mips16 -mno-micromips -msoft-float -march=m14k
TARGET_CFLAGS += -D__KERNEL__ -D__KERN__
#TARGET_CFLAGS += -DBUILD_GXEMUL
TARGET_CFLAGS += $(shell echo $(UCONFIG_ADDITIONAL_CFLAGS))

TARGET_LDFLAGS += $(shell echo $(UCONFIG_ADDITIONAL_LDFLAGS))

KTREE_OBJ_ROOT := $(OBJPATH_ROOT)/kernel

export KTREE_OBJ_ROOT

KERN_INCLUDES := include include/lib include/fs

TARGET_CFLAGS += $(addprefix -I$(KTREE)/, $(KERN_INCLUDES))

ifneq ($(MAKECMDGOALS),clean)
include $(KTREE)/include.mk
endif
TARGET_CFLAGS += $(addprefix -I$(KTREE), $(ARCH_INLUCDES))
TARGET_CFLAGS += $(ARCH_CFLAGS)
TARGET_LDFLAGS += $(ARCH_LDFLAGS)

export TARGET_CFLAGS
export TARGET_LDFLAGS

KERNEL_BUILTIN_O := $(KTREE_OBJ_ROOT)/kernel-builtin.o

# touch proc.c again to ensure that, if no UCORE_TEST given in the next build, /bin/sh will be used.
all: $(KTREE_OBJ_ROOT) $(KERNEL_BUILTIN_O)
ifneq ($(UCORE_TEST),)
	$(Q)touch $(KTREE)/process/proc.c
endif
	$(Q)$(MAKE) KERNEL_BUILTIN=$(KERNEL_BUILTIN_O)  -C $(KTREE) -f $(KTREE)/Makefile.image all

$(KERNEL_BUILTIN_O): subdir
	@echo Building uCore Kernel for $(UCONFIG_ARCH)
	$(Q)$(TARGET_LD) $(TARGET_LDFLAGS) -r -o $@ $(shell xargs < .builtinlist.tmp)

$(KTREE_OBJ_ROOT):
	mkdir -p $@

clean:
	$(Q)rm -f .builtinlist.tmp
	$(Q)rm -rf $(KTREE_OBJ_ROOT)
	$(Q)$(MAKE)  -C $(KTREE)/ -f $(KTREE)/Makefile.image clean

subdir: $(KTREE_OBJ_ROOT) $(KCONFIG_AUTOCONFIG) FORCE
	$(Q)rm -f .builtinlist.tmp
	$(Q)touch .builtinlist.tmp
ifneq ($(UCORE_TEST),)
	$(Q)touch $(KTREE)/process/proc.c
endif
	$(Q)$(MAKE) -f Makefile.subdir OBJPATH=$(KTREE_OBJ_ROOT) LOCALPATH=$(KTREE) BUILTINLIST=$(KTREE)/.builtinlist.tmp

PHONY +=FORCE
FORCE:

.PHONY: $(PHONY)
